package ui

import (
	"github.com/Oudwins/tailwind-merge-go/pkg/twmerge"
	"github.com/rotemhoresh/shadcn-templ/icons"
)

const (
	alertBaseClass            = "[&>svg]:text-foreground relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg~*]:pl-7"
	alertTitleBaseClass       = "mb-1 font-medium leading-none tracking-tight"
	alertDescriptionBaseClass = "text-sm [&_p]:leading-relaxed"
)

type AlertVariant int

const (
	AlertVariantDefault AlertVariant = iota
	AlertVariantDestructive
	AlertVariantSuccess
	AlertVariantWarning
	AlertVariantInfo
)

func (v AlertVariant) Class() string {
	switch v {
	case AlertVariantDestructive:
		return "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"
	case AlertVariantSuccess:
		return "bg-success text-success-foreground"
	case AlertVariantWarning:
		return "bg-warning text-warning-foreground"
	case AlertVariantInfo:
		return "bg-info text-info-foreground"
	default:
		return "bg-background text-foreground"
	}
}

func (v AlertVariant) Icon() templ.Component {
	switch v {
	case AlertVariantDestructive:
		return icons.CircleX("size-4", templ.Attributes{})
	case AlertVariantSuccess:
		return icons.CircleCheck("size-4", templ.Attributes{})
	case AlertVariantWarning:
		return icons.CircleCheck("size-4", templ.Attributes{})
	case AlertVariantInfo:
		return icons.CircleCheck("size-4", templ.Attributes{})
	default:
		return icons.CircleCheck("size-4", templ.Attributes{})
	}
}

func (v AlertVariant) Title() string {
	switch v {
	case AlertVariantDestructive:
		return "Error"
	case AlertVariantSuccess:
		return "Success"
	case AlertVariantWarning:
		return "Warning"
	case AlertVariantInfo:
		return "Info"
	default:
		return "Default"
	}
}

templ Alert(variant AlertVariant, classes string, attrs templ.Attributes) {
	<div
		class={ twmerge.Merge(alertBaseClass, variant.Class(), classes) }
		role="alert"
		{ attrs... }
	>
		@variant.Icon()
		{ children... }
	</div>
}

templ AlertTitle(classes string, attrs templ.Attributes) {
	<h5
		class={ twmerge.Merge(alertTitleBaseClass, classes) }
		{ attrs... }
	>
		{ children... }
	</h5>
}

templ AlertDescription(classes string, attrs templ.Attributes) {
	<div
		class={ twmerge.Merge(alertDescriptionBaseClass, classes) }
		{ attrs... }
	>
		{ children... }
	</div>
}
